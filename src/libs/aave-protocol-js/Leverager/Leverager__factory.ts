/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type { Leverager, LeveragerInterface } from './Leverager';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract ILendingPool',
        name: '_lendingPool',
        type: 'address',
      },
      {
        internalType: 'contract IRewardEligibleDataProvider',
        name: '_rewardEligibleDataProvider',
        type: 'address',
      },
      {
        internalType: 'contract IAaveOracle',
        name: '_aaveOracle',
        type: 'address',
      },
      {
        internalType: 'contract ILockZap',
        name: '_lockZap',
        type: 'address',
      },
      {
        internalType: 'contract IWETH',
        name: '_weth',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_feePercent',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_treasury',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_feePercent',
        type: 'uint256',
      },
    ],
    name: 'FeePercentUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_treasury',
        type: 'address',
      },
    ],
    name: 'TreasuryUpdated',
    type: 'event',
  },
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    inputs: [],
    name: 'API_ETH_MOCK_ADDRESS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'BORROW_RATIO_DECIMALS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FEE_PERCENT_DIVISOR',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'aaveOracle',
    outputs: [
      {
        internalType: 'contract IAaveOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eligibilityDataProvider',
    outputs: [
      {
        internalType: 'contract IRewardEligibleDataProvider',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feePercent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getConfiguration',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'data',
            type: 'uint256',
          },
        ],
        internalType: 'struct DataTypes.ReserveConfigurationMap',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getVDebtToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lendingPool',
    outputs: [
      {
        internalType: 'contract ILendingPool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lockZap',
    outputs: [
      {
        internalType: 'contract ILockZap',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'interestRateMode',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'borrowRatio',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'loopCount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isBorrow',
        type: 'bool',
      },
    ],
    name: 'loop',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'interestRateMode',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'borrowRatio',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'loopCount',
        type: 'uint256',
      },
    ],
    name: 'loopETH',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ltv',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_feePercent',
        type: 'uint256',
      },
    ],
    name: 'setFeePercent',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_treasury',
        type: 'address',
      },
    ],
    name: 'setTreasury',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasury',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'weth',
    outputs: [
      {
        internalType: 'contract IWETH',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'wethToZap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'borrowRatio',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'loopCount',
        type: 'uint256',
      },
    ],
    name: 'wethToZapEstimation',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
    ],
    name: 'zapWETHWithBorrow',
    outputs: [
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
    ],
    name: 'zapWETHWithBorrow',
    outputs: [
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200286f3803806200286f833981016040819052620000349162000107565b60006200004062000103565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b03199081166001600160a01b03998a1617909155600280548216978916979097179096556003805487169488169490941790935560058054861694871694909417909355600480548516918616919091179055600691909155600780549092169216919091179055620001be565b3390565b600080600080600080600060e0888a03121562000122578283fd5b87516200012f81620001a5565b60208901519097506200014281620001a5565b60408901519096506200015581620001a5565b60608901519095506200016881620001a5565b60808901519094506200017b81620001a5565b60a089015160c08a015191945092506200019581620001a5565b8091505092959891949750929550565b6001600160a01b0381168114620001bb57600080fd5b50565b6126a180620001ce6000396000f3fe6080604052600436106101235760003560e01c80637fd6f15c116100a0578063b5f2936011610064578063b5f29360146102f2578063c44b11f714610312578063cd498dc41461033f578063f0f442601461035f578063f2fde38b1461037f5761015d565b80637fd6f15c1461028b5780638da5cb5b146102a05780639c978eec146102b5578063a59a9973146102ca578063a8d5a452146102df5761015d565b80636372b281116100e75780636372b281146101f4578063667f374514610209578063715018a6146102295780637473eea61461023e5780637ce3489b1461026b5761015d565b806306346c3014610175578063308bc374146101a05780633fc8cef3146101b5578063602acb7e146101ca57806361d027b3146101df5761015d565b3661015d576004546001600160a01b0316331461015b5760405162461bcd60e51b8152600401610152906124d4565b60405180910390fd5b005b60405162461bcd60e51b8152600401610152906124a6565b34801561018157600080fd5b5061018a61039f565b6040516101979190612417565b60405180910390f35b3480156101ac57600080fd5b5061018a6103ae565b3480156101c157600080fd5b5061018a6103bd565b3480156101d657600080fd5b5061018a6103cc565b3480156101eb57600080fd5b5061018a6103e4565b34801561020057600080fd5b5061018a6103f3565b34801561021557600080fd5b5061018a610224366004612193565b610402565b34801561023557600080fd5b5061015b610496565b34801561024a57600080fd5b5061025e610259366004612193565b610538565b6040516101979190612538565b34801561027757600080fd5b5061015b610286366004612369565b6105c9565b34801561029757600080fd5b5061025e610626565b3480156102ac57600080fd5b5061018a61062c565b3480156102c157600080fd5b5061025e61063b565b3480156102d657600080fd5b5061018a610640565b61015b6102ed366004612399565b61064f565b3480156102fe57600080fd5b5061015b61030d36600461221b565b610add565b34801561031e57600080fd5b5061033261032d366004612193565b610e34565b604051610197919061252e565b34801561034b57600080fd5b5061025e61035a3660046121cb565b610ec2565b34801561036b57600080fd5b5061015b61037a366004612193565b6112ab565b34801561038b57600080fd5b5061015b61039a366004612193565b611325565b6003546001600160a01b031681565b6002546001600160a01b031681565b6004546001600160a01b031681565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6007546001600160a01b031681565b6005546001600160a01b031681565b6001546040516335ea6a7560e01b815260009182916001600160a01b03909116906335ea6a7590610437908690600401612417565b6101806040518083038186803b15801561045057600080fd5b505afa158015610464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104889190612279565b61012001519150505b919050565b61049e61141d565b6000546001600160a01b039081169116146104ee576040805162461bcd60e51b815260206004820181905260248201526000805160206125ec833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60015460405163c44b11f760e01b815260009182916001600160a01b039091169063c44b11f79061056d908690600401612417565b60206040518083038186803b15801561058557600080fd5b505afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd919061225e565b5161ffff169392505050565b6105d161141d565b6000546001600160a01b03908116911614610621576040805162461bcd60e51b815260206004820181905260248201526000805160206125ec833981519152604482015290519081900360640190fd5b600655565b60065481565b6000546001600160a01b031690565b600481565b6001546001600160a01b031681565b60048054600154604051636eb1769f60e11b815260009334936001600160a01b039081169363dd62ed3e9361068a933093909216910161242b565b60206040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190612381565b6106fd576001546004546106fd916001600160a01b039182169116600019611421565b60048054600754604051636eb1769f60e11b81526001600160a01b039283169363dd62ed3e936107329330939116910161242b565b60206040518083038186803b15801561074a57600080fd5b505afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190612381565b6107a5576007546004546107a5916001600160a01b039182169116600019611421565b60006107c86127106107c26006548561153990919063ffffffff16565b90611599565b6007549091506107e1906001600160a01b0316826115db565b6107eb8282611668565b9150600460009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b50506001546004805460405163e8eda9df60e01b81526001600160a01b03938416965063e8eda9df955061088f9450921691879133918a9101612445565b600060405180830381600087803b1580156108a957600080fd5b505af11580156108bd573d6000803e3d6000fd5b5050505060005b84811015610ac2576108dc6127106107c28589611539565b6001546004805460405163a415bcad60e01b81529396506001600160a01b039283169363a415bcad9361091a9392169188918d918b91339101612472565b600060405180830381600087803b15801561093457600080fd5b505af1158015610948573d6000803e3d6000fd5b505060048054604051632e1a7d4d60e01b81526001600160a01b039091169350632e1a7d4d925061097b91879101612538565b600060405180830381600087803b15801561099557600080fd5b505af11580156109a9573d6000803e3d6000fd5b505050506109c86127106107c26006548661153990919063ffffffff16565b6007549092506109e1906001600160a01b0316836115db565b6004546001600160a01b031663d0e30db06109fc8585611668565b6040518263ffffffff1660e01b81526004016000604051808303818588803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b50506001546004546001600160a01b03918216945063e8eda9df9350169050610a648686611668565b33886040518563ffffffff1660e01b8152600401610a859493929190612445565b600060405180830381600087803b158015610a9f57600080fd5b505af1158015610ab3573d6000803e3d6000fd5b505050506001810190506108c4565b50610ad4610acf336116aa565b6119a6565b50505050505050565b6000610af46001600160a01b038716333088611b51565b600154604051636eb1769f60e11b81526001600160a01b038089169263dd62ed3e92610b26923092169060040161242b565b60206040518083038186803b158015610b3e57600080fd5b505afa158015610b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b769190612381565b610b9657600154610b96906001600160a01b038881169116600019611421565b600754604051636eb1769f60e11b81526001600160a01b038089169263dd62ed3e92610bc8923092169060040161242b565b60206040518083038186803b158015610be057600080fd5b505afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c189190612381565b610c3857600754610c38906001600160a01b038881169116600019611421565b6000610c556127106107c26006548961153990919063ffffffff16565b600754909150610c72906001600160a01b03898116911683611bb1565b610c7c8682611668565b60015460405163e8eda9df60e01b81529197506001600160a01b03169063e8eda9df90610cb3908a908a9033908890600401612445565b600060405180830381600087803b158015610ccd57600080fd5b505af1158015610ce1573d6000803e3d6000fd5b5050505060005b83811015610e1d57610d006127106107c28988611539565b60015460405163a415bcad60e01b81529198506001600160a01b03169063a415bcad90610d39908b908b908b9089903390600401612472565b600060405180830381600087803b158015610d5357600080fd5b505af1158015610d67573d6000803e3d6000fd5b50505050610d866127106107c26006548a61153990919063ffffffff16565b600754909250610da3906001600160a01b038a8116911684611bb1565b6001546001600160a01b031663e8eda9df89610dbf8a86611668565b33876040518563ffffffff1660e01b8152600401610de09493929190612445565b600060405180830381600087803b158015610dfa57600080fd5b505af1158015610e0e573d6000803e3d6000fd5b50505050600181019050610ce8565b50610e2a610acf336116aa565b5050505050505050565b610e3c6120f4565b60015460405163c44b11f760e01b81526001600160a01b039091169063c44b11f790610e6c908590600401612417565b60206040518083038186803b158015610e8457600080fd5b505afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc919061225e565b92915050565b60006001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610ef8576004546001600160a01b031694505b6002546040516371c7ee1b60e11b81526000916001600160a01b03169063e38fdc3690610f29908a90600401612417565b60206040518083038186803b158015610f4157600080fd5b505afa158015610f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f799190612381565b600254604051636d9077cb60e01b81529192506000916001600160a01b0390911690636d9077cb90610faf908b90600401612417565b60206040518083038186803b158015610fc757600080fd5b505afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff9190612381565b9050600061101e6127106107c26006548a61153990919063ffffffff16565b905061102a8782611668565b96506110406110398989611c03565b8490611dab565b925060005b858110156110a35761105d6127106107c28a8a611539565b975061107a6127106107c26006548b61153990919063ffffffff16565b91506110996110928a61108d8b86611668565b611c03565b8590611dab565b9350600101611045565b508282106110b757600093505050506112a2565b60006110c38484611668565b6005546004805460405163b3596f0760e01b81529394506000936001600160a01b039384169363b3596f07936110fd939091169101612417565b60206040518083038186803b15801561111557600080fd5b505afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d9190612381565b60055460048054604051630495f95f60e51b81529394506000936001600160a01b03938416936392bf2be093611187939091169101612417565b60206040518083038186803b15801561119f57600080fd5b505afa1580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d791906121af565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561120f57600080fd5b505afa158015611223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124791906123c4565b905060006112776305f5e1006107c2858160ff8716600a0a6112718a670de0b6b3a7640000611539565b90611539565b905061129361128c60646107c2846003611539565b8290611dab565b97506112a29650505050505050565b95945050505050565b6112b361141d565b6000546001600160a01b03908116911614611303576040805162461bcd60e51b815260206004820181905260248201526000805160206125ec833981519152604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b61132d61141d565b6000546001600160a01b0390811691161461137d576040805162461bcd60e51b815260206004820181905260248201526000805160206125ec833981519152604482015290519081900360640190fd5b6001600160a01b0381166113c25760405162461bcd60e51b81526004018080602001828103825260268152602001806125a56026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b8015806114a7575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561147957600080fd5b505afa15801561148d573d6000803e3d6000fd5b505050506040513d60208110156114a357600080fd5b5051155b6114e25760405162461bcd60e51b81526004018080602001828103825260368152602001806126366036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611534908490611e05565b505050565b60008261154857506000610ebc565b8282028284828161155557fe5b04146115925760405162461bcd60e51b81526004018080602001828103825260218152602001806125cb6021913960400191505060405180910390fd5b9392505050565b600061159283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611fbc565b604080516000808252602082019092526001600160a01b03841690839060405161160591906123de565b60006040518083038185875af1925050503d8060008114611642576040519150601f19603f3d011682016040523d82523d6000602084013e611647565b606091505b50509050806115345760405162461bcd60e51b815260040161015290612501565b600061159283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061205e565b6002546040516371c7ee1b60e11b815260009182916001600160a01b039091169063e38fdc36906116df908690600401612417565b60206040518083038186803b1580156116f757600080fd5b505afa15801561170b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172f9190612381565b600254604051636d9077cb60e01b81529192506000916001600160a01b0390911690636d9077cb90611765908790600401612417565b60206040518083038186803b15801561177d57600080fd5b505afa158015611791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b59190612381565b90508181106117c957600092505050610491565b60006117d58383611668565b6005546004805460405163b3596f0760e01b81529394506000936001600160a01b039384169363b3596f079361180f939091169101612417565b60206040518083038186803b15801561182757600080fd5b505afa15801561183b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185f9190612381565b60055460048054604051630495f95f60e51b81529394506000936001600160a01b03938416936392bf2be093611899939091169101612417565b60206040518083038186803b1580156118b157600080fd5b505afa1580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e991906121af565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561192157600080fd5b505afa158015611935573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195991906123c4565b905060006119836305f5e1006107c2858160ff8716600a0a6112718a670de0b6b3a7640000611539565b905061199861128c60646107c2846003611539565b965061049195505050505050565b60008115610491576001546004805460405163a415bcad60e01b81526000936001600160a01b039081169363a415bcad936119ed9392169188916002918891339101612472565b600060405180830381600087803b158015611a0757600080fd5b505af1158015611a1b573d6000803e3d6000fd5b505060048054600354604051636eb1769f60e11b81526001600160a01b03928316955063dd62ed3e9450611a55933093909216910161242b565b60206040518083038186803b158015611a6d57600080fd5b505afa158015611a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa59190612381565b611ac857600354600454611ac8916001600160a01b039182169116600019611421565b600354604051631783d44360e31b81526001600160a01b039091169063bc1ea21890611aff90869030903390600090600401612541565b602060405180830381600087803b158015611b1957600080fd5b505af1158015611b2d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115929190612381565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611bab908590611e05565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611534908490611e05565b60055460405163b3596f0760e01b815260009182916001600160a01b039091169063b3596f0790611c38908790600401612417565b60206040518083038186803b158015611c5057600080fd5b505afa158015611c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c889190612381565b90506000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611cc557600080fd5b505afa158015611cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cfd91906123c4565b90506000611da16127106107c2600260009054906101000a90046001600160a01b03166001600160a01b03166388ea691d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d5857600080fd5b505afa158015611d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d909190612381565b61127160ff87166107c2898c611539565b9695505050505050565b600082820183811015611592576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611e17826001600160a01b03166120b8565b611e68576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600080836001600160a01b0316836040518082805190602001908083835b60208310611ea55780518252601f199092019160209182019101611e86565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f07576040519150601f19603f3d011682016040523d82523d6000602084013e611f0c565b606091505b509150915081611f63576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115611bab57808060200190516020811015611f7f57600080fd5b5051611bab5760405162461bcd60e51b815260040180806020018281038252602a81526020018061260c602a913960400191505060405180910390fd5b600081836120485760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561200d578181015183820152602001611ff5565b50505050905090810190601f16801561203a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161205457fe5b0495945050505050565b600081848411156120b05760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561200d578181015183820152602001611ff5565b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906120ec57508115155b949350505050565b6040518060200160405280600081525090565b80516104918161258c565b600060208284031215612123578081fd5b6040516020810181811067ffffffffffffffff8211171561214057fe5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461049157600080fd5b805164ffffffffff8116811461049157600080fd5b805160ff8116811461049157600080fd5b6000602082840312156121a4578081fd5b81356115928161258c565b6000602082840312156121c0578081fd5b81516115928161258c565b600080600080600060a086880312156121e2578081fd5b85356121ed8161258c565b945060208601356121fd8161258c565b94979496505050506040830135926060810135926080909101359150565b600080600080600060a08688031215612232578081fd5b853561223d8161258c565b97602087013597506040870135966060810135965060800135945092505050565b60006020828403121561226f578081fd5b6115928383612112565b600061018080838503121561228c578182fd5b61229581612568565b90506122a18484612112565b81526122af6020840161214d565b60208201526122c06040840161214d565b60408201526122d16060840161214d565b60608201526122e26080840161214d565b60808201526122f360a0840161214d565b60a082015261230460c0840161216d565b60c082015261231560e08401612107565b60e0820152610100612328818501612107565b9082015261012061233a848201612107565b9082015261014061234c848201612107565b9082015261016061235e848201612182565b908201529392505050565b60006020828403121561237a578081fd5b5035919050565b600060208284031215612392578081fd5b5051919050565b6000806000606084860312156123ad578283fd5b505081359360208301359350604090920135919050565b6000602082840312156123d5578081fd5b61159282612182565b60008251815b818110156123fe57602081860181015185830152016123e4565b8181111561240c5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b6001600160a01b0395861681526020810194909452604084019290925261ffff166060830152909116608082015260a00190565b60208082526014908201527311985b1b189858dac81b9bdd08185b1b1bddd95960621b604082015260600190565b602080825260139082015272149958d95a5d99481b9bdd08185b1b1bddd959606a1b604082015260600190565b60208082526013908201527211551217d514905394d1915497d19052531151606a1b604082015260600190565b9051815260200190565b90815260200190565b9384526001600160a01b039283166020850152911660408301521515606082015260800190565b60405181810167ffffffffffffffff8111828210171561258457fe5b604052919050565b6001600160a01b03811681146125a157600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220605a5910def463b916c22e3b60dd2a8a0fd861354758bf870e4681d45e98948364736f6c63430007060033';

type LeveragerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeveragerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Leverager__factory extends ContractFactory {
  constructor(...args: LeveragerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _lendingPool: PromiseOrValue<string>,
    _rewardEligibleDataProvider: PromiseOrValue<string>,
    _aaveOracle: PromiseOrValue<string>,
    _lockZap: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _feePercent: PromiseOrValue<BigNumberish>,
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Leverager> {
    return super.deploy(
      _lendingPool,
      _rewardEligibleDataProvider,
      _aaveOracle,
      _lockZap,
      _weth,
      _feePercent,
      _treasury,
      overrides || {}
    ) as Promise<Leverager>;
  }
  override getDeployTransaction(
    _lendingPool: PromiseOrValue<string>,
    _rewardEligibleDataProvider: PromiseOrValue<string>,
    _aaveOracle: PromiseOrValue<string>,
    _lockZap: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _feePercent: PromiseOrValue<BigNumberish>,
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lendingPool,
      _rewardEligibleDataProvider,
      _aaveOracle,
      _lockZap,
      _weth,
      _feePercent,
      _treasury,
      overrides || {}
    );
  }
  override attach(address: string): Leverager {
    return super.attach(address) as Leverager;
  }
  override connect(signer: Signer): Leverager__factory {
    return super.connect(signer) as Leverager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeveragerInterface {
    return new utils.Interface(_abi) as LeveragerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Leverager {
    return new Contract(address, _abi, signerOrProvider) as Leverager;
  }
}
