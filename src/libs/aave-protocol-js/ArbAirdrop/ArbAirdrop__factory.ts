/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type { ArbAirdrop, ArbAirdropInterface } from './ArbAirdrop';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_endTimestamp',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_maximumAmountToClaim',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_arbToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AirdropAlreadyClaimed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ClaimAmountTooHigh',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ClaimTimeExceeded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidProof',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MerkleRootAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MerkleRootNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewTimeStampTooFar',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TooEarlyToWithdraw',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AirdropRewardsClaim',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32',
      },
    ],
    name: 'MerkleRootSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'endTimestamp',
        type: 'uint256',
      },
    ],
    name: 'NewEndTimestamp',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'TokensWithdrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAXIMUM_AMOUNT_TO_CLAIM',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'arbToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[]',
        name: 'merkleProof',
        type: 'bytes32[]',
      },
    ],
    name: 'canClaim',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[]',
        name: 'merkleProof',
        type: 'bytes32[]',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'endTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'hasClaimed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isMerkleRootSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'merkleRoot',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseAirdrop',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_merkleRoot',
        type: 'bytes32',
      },
    ],
    name: 'setMerkleRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseAirdrop',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newEndTimestamp',
        type: 'uint256',
      },
    ],
    name: 'updateEndTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawTokenRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c060405234801561001057600080fd5b5060405161131638038061131683398101604081905261002f916100b2565b6000805460ff191690556001805561004633610060565b60049290925560a0526001600160a01b03166080526100f8565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806000606084860312156100c757600080fd5b83516020850151604086015191945092506001600160a01b03811681146100ed57600080fd5b809150509250925092565b60805160a0516111dd61013960003960008181610233015261044201526000818161012f0152818161030d0152818161038f015261060201526111dd6000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806373b2e80e116100b2578063bd69ba5011610081578063dc38bdb511610066578063dc38bdb51461025d578063e96ad3ad14610270578063f2fde38b1461027857600080fd5b8063bd69ba501461022e578063c6afd5bb1461025557600080fd5b806373b2e80e146101de5780637cb64759146102015780638da5cb5b14610214578063a85adeab1461022557600080fd5b80635c975abb116100ee5780635c975abb146101985780635ff10e39146101af5780636e1613fb146101c3578063715018a6146101d657600080fd5b806315618acd146101205780631ae8432d1461012a5780632eb4a7ab1461016e5780632f52ebb714610185575b600080fd5b61012861028b565b005b6101517f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61017760035481565b604051908152602001610165565b610128610193366004610f98565b6103ed565b60005460ff165b6040519015158152602001610165565b60025461019f90600160a01b900460ff1681565b6101286101d1366004610fe4565b610675565b6101286106f8565b61019f6101ec366004611019565b60056020526000908152604090205460ff1681565b61012861020f366004610fe4565b61070c565b6002546001600160a01b0316610151565b61017760045481565b6101777f000000000000000000000000000000000000000000000000000000000000000081565b6101286107bd565b61019f61026b366004611034565b6107d5565b6101286108b0565b610128610286366004611019565b6108c8565b61029361095d565b6004546102a390620151806110a4565b4210156102dc576040517ff91f552f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561035c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038091906110bc565b90506103b66001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836109b7565b6040518181527f9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f906020015b60405180910390a150565b6103f5610a37565b6103fd610a8a565b600254600160a01b900460ff16610440576040517f9f8a28f200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000083111561049a576040517fb4fd084c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004544211156104d6576040517feba541ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526005602052604090205460ff1615610520576040517fe4ca4c0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805133602082015290810184905260009060600160408051601f19818403018152828252805160209182012090830152016040516020818303038152906040528051906020012090506105ac838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506003549150849050610ae4565b6105e2576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600560205260409020805460ff19166001179055610631907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690866109b7565b60405184815233907f19552fadade1a47d8fa44f6487230cfff67275de6e68fbfba65171532768fd7d9060200160405180910390a25061067060018055565b505050565b61067d61095d565b8061068b4262278d006110a4565b10156106c3576040517fb52990bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048190556040518181527fac7d83845fcc6871010ded05a8cb9bddee5cc49fdb8f2d24b96141d401b6bfed906020016103e2565b61070061095d565b61070a6000610afa565b565b61071461095d565b600254600160a01b900460ff1615610758576040517f6006d96400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b17905560038190556040517f42cbc405e4dbf1b691e85b9a34b08ecfcf7a9ad9078bf4d645ccfa1fac11c10b906103e29083815260200190565b6107c561095d565b6107cd610a37565b61070a610b64565b6000600454421115801561080257506001600160a01b03851660009081526005602052604090205460ff16155b156108a457604080516001600160a01b038716602082015290810185905260009060600160408051601f198184030181528282528051602091820120908301520160405160208183030381529060405280519060200120905061089c848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506003549150849050610ae4565b9150506108a8565b5060005b949350505050565b6108b861095d565b6108c0610bbe565b61070a610c10565b6108d061095d565b6001600160a01b0381166109515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61095a81610afa565b50565b6002546001600160a01b0316331461070a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610948565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610670908490610c49565b60005460ff161561070a5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610948565b60026001541415610add5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610948565b6002600155565b600082610af18584610d31565b14949350505050565b600280546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610b6c610a37565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ba13390565b6040516001600160a01b03909116815260200160405180910390a1565b60005460ff1661070a5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610948565b610c18610bbe565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610ba1565b6000610c9e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d7e9092919063ffffffff16565b9050805160001480610cbf575080806020019051810190610cbf91906110d5565b6106705760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610948565b600081815b8451811015610d7657610d6282868381518110610d5557610d556110f7565b6020026020010151610d8d565b915080610d6e8161110d565b915050610d36565b509392505050565b60606108a88484600085610dbf565b6000818310610da9576000828152602084905260409020610db8565b60008381526020839052604090205b9392505050565b606082471015610e375760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610948565b600080866001600160a01b03168587604051610e539190611158565b60006040518083038185875af1925050503d8060008114610e90576040519150601f19603f3d011682016040523d82523d6000602084013e610e95565b606091505b5091509150610ea687838387610eb1565b979650505050505050565b60608315610f1d578251610f16576001600160a01b0385163b610f165760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610948565b50816108a8565b6108a88383815115610f325781518083602001fd5b8060405162461bcd60e51b81526004016109489190611174565b60008083601f840112610f5e57600080fd5b50813567ffffffffffffffff811115610f7657600080fd5b6020830191508360208260051b8501011115610f9157600080fd5b9250929050565b600080600060408486031215610fad57600080fd5b83359250602084013567ffffffffffffffff811115610fcb57600080fd5b610fd786828701610f4c565b9497909650939450505050565b600060208284031215610ff657600080fd5b5035919050565b80356001600160a01b038116811461101457600080fd5b919050565b60006020828403121561102b57600080fd5b610db882610ffd565b6000806000806060858703121561104a57600080fd5b61105385610ffd565b935060208501359250604085013567ffffffffffffffff81111561107657600080fd5b61108287828801610f4c565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110b7576110b761108e565b500190565b6000602082840312156110ce57600080fd5b5051919050565b6000602082840312156110e757600080fd5b81518015158114610db857600080fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156111215761112161108e565b5060010190565b60005b8381101561114357818101518382015260200161112b565b83811115611152576000848401525b50505050565b6000825161116a818460208701611128565b9190910192915050565b6020815260008251806020840152611193816040850160208701611128565b601f01601f1916919091016040019291505056fea26469706673582212209aa4dbe0943b88e0743595c03c8fffbee23310354fd8f9b54f7734a8eb883b8d64736f6c634300080c0033';

type ArbAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbAirdrop__factory extends ContractFactory {
  constructor(...args: ArbAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _endTimestamp: PromiseOrValue<BigNumberish>,
    _maximumAmountToClaim: PromiseOrValue<BigNumberish>,
    _arbToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbAirdrop> {
    return super.deploy(
      _endTimestamp,
      _maximumAmountToClaim,
      _arbToken,
      overrides || {}
    ) as Promise<ArbAirdrop>;
  }
  override getDeployTransaction(
    _endTimestamp: PromiseOrValue<BigNumberish>,
    _maximumAmountToClaim: PromiseOrValue<BigNumberish>,
    _arbToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _endTimestamp,
      _maximumAmountToClaim,
      _arbToken,
      overrides || {}
    );
  }
  override attach(address: string): ArbAirdrop {
    return super.attach(address) as ArbAirdrop;
  }
  override connect(signer: Signer): ArbAirdrop__factory {
    return super.connect(signer) as ArbAirdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbAirdropInterface {
    return new utils.Interface(_abi) as ArbAirdropInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ArbAirdrop {
    return new Contract(address, _abi, signerOrProvider) as ArbAirdrop;
  }
}
