/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type { WETHGateway, WETHGatewayInterface } from './WETHGateway';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'weth',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
    ],
    name: 'authorizeLendingPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'interesRateMode',
        type: 'uint256',
      },
      {
        internalType: 'uint16',
        name: 'referralCode',
        type: 'uint16',
      },
    ],
    name: 'borrowETH',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: 'referralCode',
        type: 'uint16',
      },
    ],
    name: 'depositETH',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: 'referralCode',
        type: 'uint16',
      },
    ],
    name: 'depositETHWithAutoDLP',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'emergencyEtherTransfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'emergencyTokenTransfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getWETHAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rateMode',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
    ],
    name: 'repayETH',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'withdrawETH',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a060405234801561001057600080fd5b5060405161179a38038061179a83398101604081905261002f9161009c565b6000610039610098565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060601b6001600160601b0319166080526100ca565b3390565b6000602082840312156100ad578081fd5b81516001600160a01b03811681146100c3578182fd5b9392505050565b60805160601c61166e61012c6000398060bb5280610281528061036e528061040452806104a4528061053a52806105ba52806106315280610773528061092752806109bd5280610b1f5280610ca15280610d375280610dd6525061166e6000f3fe6080604052600436106100ab5760003560e01c8063a3d5b25511610064578063a3d5b255146101c1578063affa8817146101e1578063eed88b8d146101f6578063f2fde38b14610216578063fc652e5314610236578063fd1495291461024957610103565b806302c5fcf81461011b578063474cf53d1461012e57806366514c9714610141578063715018a61461016157806380500d20146101765780638da5cb5b1461019657610103565b3661010357336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101015760405162461bcd60e51b81526004016100f89061150c565b60405180910390fd5b005b60405162461bcd60e51b81526004016100f8906114de565b6101016101293660046111b7565b610269565b61010161013c3660046110c5565b6104a2565b34801561014d57600080fd5b5061010161015c366004611200565b610596565b34801561016d57600080fd5b506101016106aa565b34801561018257600080fd5b50610101610191366004611176565b61074c565b3480156101a257600080fd5b506101ab610a36565b6040516101b891906113a8565b60405180910390f35b3480156101cd57600080fd5b506101016101dc36600461110b565b610a45565b3480156101ed57600080fd5b506101ab610b1d565b34801561020257600080fd5b5061010161021136600461114b565b610b41565b34801561022257600080fd5b506101016102313660046110a2565b610ba7565b6101016102443660046110c5565b610c9f565b34801561025557600080fd5b506101016102643660046110a2565b610d67565b60008061031283876001600160a01b03166335ea6a757f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016102bc91906113a8565b6101806040518083038186803b1580156102d557600080fd5b505afa1580156102e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030d9190611267565b610e61565b90925090506000600185600281111561032757fe5b600281111561033257fe5b1461033d578161033f565b825b90508086101561034c5750845b8034101561036c5760405162461bcd60e51b81526004016100f890611566565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b505060405163573ade8160e01b81526001600160a01b038b16935063573ade81925061043291507f00000000000000000000000000000000000000000000000000000000000000009034908a908a9060040161147f565b602060405180830381600087803b15801561044c57600080fd5b505af1158015610460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104849190611357565b50803411156104995761049933823403610f69565b50505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156104fd57600080fd5b505af1158015610511573d6000803e3d6000fd5b505060405163e8eda9df60e01b81526001600160a01b038716935063e8eda9df925061056891507f000000000000000000000000000000000000000000000000000000000000000090349087908790600401611452565b600060405180830381600087803b15801561058257600080fd5b505af1158015610499573d6000803e3d6000fd5b60405163a415bcad60e01b81526001600160a01b0385169063a415bcad906105ea907f00000000000000000000000000000000000000000000000000000000000000009087908790879033906004016114aa565b600060405180830381600087803b15801561060457600080fd5b505af1158015610618573d6000803e3d6000fd5b5050604051632e1a7d4d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250632e1a7d4d91506106689086906004016115ad565b600060405180830381600087803b15801561068257600080fd5b505af1158015610696573d6000803e3d6000fd5b505050506106a43384610f69565b50505050565b6106b2610ffb565b6000546001600160a01b03908116911614610702576040805162461bcd60e51b81526020600482018190526024820152600080516020611619833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6040516335ea6a7560e01b81526000906001600160a01b038516906335ea6a759061079b907f0000000000000000000000000000000000000000000000000000000000000000906004016113a8565b6101806040518083038186803b1580156107b457600080fd5b505afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec9190611267565b60e0015190506000816001600160a01b03166370a08231336040518263ffffffff1660e01b815260040161082091906113a8565b60206040518083038186803b15801561083857600080fd5b505afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611357565b9050836000198114156108805750805b6040516323b872dd60e01b81526001600160a01b038416906323b872dd906108b0903390309086906004016113bc565b602060405180830381600087803b1580156108ca57600080fd5b505af11580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190611247565b50604051631a4ca37b60e21b81526001600160a01b038716906369328dec90610953907f000000000000000000000000000000000000000000000000000000000000000090859030906004016113f9565b602060405180830381600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190611357565b50604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d906109f29084906004016115ad565b600060405180830381600087803b158015610a0c57600080fd5b505af1158015610a20573d6000803e3d6000fd5b50505050610a2e8482610f69565b505050505050565b6000546001600160a01b031690565b610a4d610ffb565b6000546001600160a01b03908116911614610a9d576040805162461bcd60e51b81526020600482018190526024820152600080516020611619833981519152604482015290519081900360640190fd5b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90610acb90859085906004016113e0565b602060405180830381600087803b158015610ae557600080fd5b505af1158015610af9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a49190611247565b7f000000000000000000000000000000000000000000000000000000000000000090565b610b49610ffb565b6000546001600160a01b03908116911614610b99576040805162461bcd60e51b81526020600482018190526024820152600080516020611619833981519152604482015290519081900360640190fd5b610ba38282610f69565b5050565b610baf610ffb565b6000546001600160a01b03908116911614610bff576040805162461bcd60e51b81526020600482018190526024820152600080516020611619833981519152604482015290519081900360640190fd5b6001600160a01b038116610c445760405162461bcd60e51b81526004018080602001828103825260268152602001806115f36026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b505060405163384e96f960e01b81526001600160a01b038716935063384e96f9925061056891507f000000000000000000000000000000000000000000000000000000000000000090349033908890889060040161141c565b610d6f610ffb565b6000546001600160a01b03908116911614610dbf576040805162461bcd60e51b81526020600482018190526024820152600080516020611619833981519152604482015290519081900360640190fd5b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390610e0f908490600019906004016113e0565b602060405180830381600087803b158015610e2957600080fd5b505af1158015610e3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba39190611247565b6000808261010001516001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610eb657600080fd5b505afa158015610eca573d6000803e3d6000fd5b505050506040513d6020811015610ee057600080fd5b5051610120840151604080516370a0823160e01b81526001600160a01b038881166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610f3257600080fd5b505afa158015610f46573d6000803e3d6000fd5b505050506040513d6020811015610f5c57600080fd5b5051909590945092505050565b604080516000808252602082019092526001600160a01b038416908390604051610f93919061136f565b60006040518083038185875af1925050503d8060008114610fd0576040519150601f19603f3d011682016040523d82523d6000602084013e610fd5565b606091505b5050905080610ff65760405162461bcd60e51b81526004016100f890611539565b505050565b3390565b805161100a816115da565b919050565b600060208284031215611020578081fd5b6040516020810181811067ffffffffffffffff8211171561103d57fe5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461100a57600080fd5b803561ffff8116811461100a57600080fd5b805164ffffffffff8116811461100a57600080fd5b805160ff8116811461100a57600080fd5b6000602082840312156110b3578081fd5b81356110be816115da565b9392505050565b6000806000606084860312156110d9578182fd5b83356110e4816115da565b925060208401356110f4816115da565b91506111026040850161106a565b90509250925092565b60008060006060848603121561111f578283fd5b833561112a816115da565b9250602084013561113a816115da565b929592945050506040919091013590565b6000806040838503121561115d578182fd5b8235611168816115da565b946020939093013593505050565b60008060006060848603121561118a578283fd5b8335611195816115da565b92506020840135915060408401356111ac816115da565b809150509250925092565b600080600080608085870312156111cc578081fd5b84356111d7816115da565b9350602085013592506040850135915060608501356111f5816115da565b939692955090935050565b60008060008060808587031215611215578384fd5b8435611220816115da565b9350602085013592506040850135915061123c6060860161106a565b905092959194509250565b600060208284031215611258578081fd5b815180151581146110be578182fd5b600061018080838503121561127a578182fd5b611283816115b6565b905061128f848461100f565b815261129d6020840161104a565b60208201526112ae6040840161104a565b60408201526112bf6060840161104a565b60608201526112d06080840161104a565b60808201526112e160a0840161104a565b60a08201526112f260c0840161107c565b60c082015261130360e08401610fff565b60e0820152610100611316818501610fff565b90820152610120611328848201610fff565b9082015261014061133a848201610fff565b9082015261016061134c848201611091565b908201529392505050565b600060208284031215611368578081fd5b5051919050565b60008251815b8181101561138f5760208186018101518583015201611375565b8181111561139d5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6001600160a01b03958616815260208101949094529184166040840152909216606082015261ffff909116608082015260a00190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b6001600160a01b0395861681526020810194909452604084019290925261ffff166060830152909116608082015260a00190565b60208082526014908201527311985b1b189858dac81b9bdd08185b1b1bddd95960621b604082015260600190565b602080825260139082015272149958d95a5d99481b9bdd08185b1b1bddd959606a1b604082015260600190565b60208082526013908201527211551217d514905394d1915497d19052531151606a1b604082015260600190565b60208082526027908201527f6d73672e76616c7565206973206c657373207468616e2072657061796d656e7460408201526608185b5bdd5b9d60ca1b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff811182821017156115d257fe5b604052919050565b6001600160a01b03811681146115ef57600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220c1d1bc3d019344e8fc27cf15ad40c6445f789b4308bb25263526c47a39cfb05c64736f6c63430007060033';

type WETHGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETHGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETHGateway__factory extends ContractFactory {
  constructor(...args: WETHGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WETHGateway> {
    return super.deploy(weth, overrides || {}) as Promise<WETHGateway>;
  }
  override getDeployTransaction(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  override attach(address: string): WETHGateway {
    return super.attach(address) as WETHGateway;
  }
  override connect(signer: Signer): WETHGateway__factory {
    return super.connect(signer) as WETHGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHGatewayInterface {
    return new utils.Interface(_abi) as WETHGatewayInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETHGateway {
    return new Contract(address, _abi, signerOrProvider) as WETHGateway;
  }
}
