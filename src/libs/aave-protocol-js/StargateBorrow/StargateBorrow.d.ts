/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from '../common';

export declare namespace IStargateRouter {
  export type LzTxObjStruct = {
    dstGasForCall: BigNumberish;
    dstNativeAmount: BigNumberish;
    dstNativeAddr: BytesLike;
  };

  export type LzTxObjStructOutput = [BigNumber, BigNumber, string] & {
    dstGasForCall: BigNumber;
    dstNativeAmount: BigNumber;
    dstNativeAddr: string;
  };
}

export interface StargateBorrowInterface extends utils.Interface {
  functions: {
    'borrow(address,uint256,uint256,uint16)': FunctionFragment;
    'lendingPool()': FunctionFragment;
    'poolIdPerChain(uint16,address)': FunctionFragment;
    'quoteLayerZeroSwapFee(uint16,uint8,bytes,bytes,(uint256,uint256,bytes))': FunctionFragment;
    'router()': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'borrow'
      | 'lendingPool'
      | 'poolIdPerChain'
      | 'quoteLayerZeroSwapFee'
      | 'router'
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'borrow',
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: 'lendingPool', values?: undefined): string;
  encodeFunctionData(functionFragment: 'poolIdPerChain', values: [BigNumberish, string]): string;
  encodeFunctionData(
    functionFragment: 'quoteLayerZeroSwapFee',
    values: [BigNumberish, BigNumberish, BytesLike, BytesLike, IStargateRouter.LzTxObjStruct]
  ): string;
  encodeFunctionData(functionFragment: 'router', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'borrow', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'lendingPool', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'poolIdPerChain', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'quoteLayerZeroSwapFee', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'router', data: BytesLike): Result;

  events: {};
}

export interface StargateBorrow extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: StargateBorrowInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    borrow(
      asset: string,
      amount: BigNumberish,
      interestRateMode: BigNumberish,
      dstChainId: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    lendingPool(overrides?: CallOverrides): Promise<[string]>;

    poolIdPerChain(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    quoteLayerZeroSwapFee(
      _dstChainId: BigNumberish,
      _functionType: BigNumberish,
      _toAddress: BytesLike,
      _transferAndCallPayload: BytesLike,
      _lzTxParams: IStargateRouter.LzTxObjStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    router(overrides?: CallOverrides): Promise<[string]>;
  };

  borrow(
    asset: string,
    amount: BigNumberish,
    interestRateMode: BigNumberish,
    dstChainId: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  lendingPool(overrides?: CallOverrides): Promise<string>;

  poolIdPerChain(arg0: BigNumberish, arg1: string, overrides?: CallOverrides): Promise<BigNumber>;

  quoteLayerZeroSwapFee(
    _dstChainId: BigNumberish,
    _functionType: BigNumberish,
    _toAddress: BytesLike,
    _transferAndCallPayload: BytesLike,
    _lzTxParams: IStargateRouter.LzTxObjStruct,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  router(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    borrow(
      asset: string,
      amount: BigNumberish,
      interestRateMode: BigNumberish,
      dstChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    lendingPool(overrides?: CallOverrides): Promise<string>;

    poolIdPerChain(arg0: BigNumberish, arg1: string, overrides?: CallOverrides): Promise<BigNumber>;

    quoteLayerZeroSwapFee(
      _dstChainId: BigNumberish,
      _functionType: BigNumberish,
      _toAddress: BytesLike,
      _transferAndCallPayload: BytesLike,
      _lzTxParams: IStargateRouter.LzTxObjStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    router(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    borrow(
      asset: string,
      amount: BigNumberish,
      interestRateMode: BigNumberish,
      dstChainId: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    lendingPool(overrides?: CallOverrides): Promise<BigNumber>;

    poolIdPerChain(arg0: BigNumberish, arg1: string, overrides?: CallOverrides): Promise<BigNumber>;

    quoteLayerZeroSwapFee(
      _dstChainId: BigNumberish,
      _functionType: BigNumberish,
      _toAddress: BytesLike,
      _transferAndCallPayload: BytesLike,
      _lzTxParams: IStargateRouter.LzTxObjStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    router(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    borrow(
      asset: string,
      amount: BigNumberish,
      interestRateMode: BigNumberish,
      dstChainId: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    lendingPool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolIdPerChain(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    quoteLayerZeroSwapFee(
      _dstChainId: BigNumberish,
      _functionType: BigNumberish,
      _toAddress: BytesLike,
      _transferAndCallPayload: BytesLike,
      _lzTxParams: IStargateRouter.LzTxObjStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    router(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
